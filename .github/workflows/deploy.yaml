name: Deploy to ECS

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'   # triggers workflow if a Git tag like v1.0.0 is pushed

env:
  AWS_REGION: ap-south-1
  ECR_REGISTRY: 490617140445.dkr.ecr.ap-south-1.amazonaws.com
  ECR_REPO: my-app
  TF_WORKING_DIR: infra   # path where your terraform code is stored

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Determine Docker Image Tag
        id: docker_tag
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            # Workflow triggered by Git tag
            IMAGE_TAG=${GITHUB_REF##*/}   # extract tag name, e.g., v1.0.0
          else
            # Workflow triggered by branch push â†’ auto-increment version
            IMAGE_TAG=v${GITHUB_RUN_NUMBER}
          fi
          echo "Using Docker tag: $IMAGE_TAG"
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      - name: Build, Tag, and Push Docker image
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPO:${{ env.IMAGE_TAG }} ./app
          docker push $ECR_REGISTRY/$ECR_REPO:${{ env.IMAGE_TAG }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform init

      - name: Terraform Plan
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform plan -var "docker_image_tag=${{ env.IMAGE_TAG }}" -input=false -lock=false

      - name: Terraform Apply
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform apply -auto-approve -var "docker_image_tag=${{ env.IMAGE_TAG }}"
